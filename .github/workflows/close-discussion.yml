name: Close Discussion

on:
  pull_request:
    types: [closed]  # Trigger only when the PR is closed

jobs:
  close-discussion-comment-answer:
    runs-on: ubuntu-latest

    steps:
    - name: Check if PR is merged
      if: github.event.pull_request.merged == true
      run: |
        # Extract the discussion ID from the PR body
        pr_body="${{ github.event.pull_request.body }}"
        discussion_id=$(echo "$pr_body" | grep -oP '#\d+' | sed 's/#//')
        pr_number="${{ github.event.pull_request.number }}"  # Get the PR number

        # If discussion_id is found, close the discussion, add a comment, and mark it as the answer
        if [ -n "$discussion_id" ]; then
          echo "Discussion ID found: #$discussion_id"
          echo "PR Number: #$pr_number"
          # Set GitHub Token to authenticate API requests
          token="${{ secrets.GITHUB_TOKEN }}"

          echo $pr_number
          echo $discussion_id

          get_discussion_query=$(echo "{\"query\": \"query { repository(owner: \"$GITHUB_REPOSITORY_OWNER\", name: \"$GITHUB_REPOSITORY_NAME\") { discussion(number: $discussion_id) { id title state } } }\"}")
        
          discussion_response=$(curl -X POST \
            -H "Authorization: Bearer $token" \
            -H "Content-Type: application/json" \
            -d "$get_discussion_query" \
            "https://api.github.com/graphql")
        
          discussion__ql_id=$(echo "$discussion_response" | jq -r '.data.repository.discussion.id')
          echo $discussion__ql_id

          add_comment_query=$(echo "{"query": "mutation { addDiscussionComment(input: {body: "Merged with PR #$pr_number", discussionId: "$discussion__ql_id"}) { clientMutationId comment { id body } } }"}")

          # Add the comment to the discussion
          comment_response=$(curl -X POST \
            -H "Authorization: Bearer $token" \
            -H "Content-Type: application/json" \
            -d "$add_comment_query" \
            "https://api.github.com/graphql")
          echo "$comment_response"
          # Extract the comment ID from the response
          comment_id=$(echo "$comment_response" | jq -r '.data.addDiscussionComment.comment.id')

          # Check if the comment_id is found
          if [ -n "$comment_id" ]; then
            echo "Comment posted successfully. Comment ID: $comment_id"

            # Prepare the mutation to mark the comment as the answer
            mark_answer_query=$(echo "{"query": "mutation { markDiscussionCommentAsAnswer(input: {id: "$comment_id"}) { discussion { id title state } } }"}")

            # Mark the comment as the answer
            curl -X POST \
              -H "Authorization: Bearer $token" \
              -H "Content-Type: application/json" \
              -d "$mark_answer_query" \
              "https://api.github.com/graphql"
          else
            echo "Failed to post the comment or extract comment ID."
          fi
          
        else
          echo "No discussion ID found in the PR body."
        fi
