name: Update JSON Date

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  update-json-date:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
        
    - name: Print current branch
      run: echo "$(git branch)"
      
    - name: Update JSON files
      run: |
        echo  "Fetch the base branch for comparison"
        BASE_BRANCH=${{ github.event.pull_request.base.ref }}
        HEAD_BRANCH=${{ github.event.pull_request.head.ref }}

        echo "Fetch the base branch ($BASE_BRANCH) to ensure it's locally available. (HEAD_BRANCH: $HEAD_BRANCH"
        git fetch origin $BASE_BRANCH

        echo "Get the list of changed files between base and head branches"
        CHANGED_FILES=$(git diff --name-only origin/$HEAD_BRANCH HEAD)

        echo "Changed files: $CHANGED_FILES"

        # Iterate through changed files
        for FILE in $CHANGED_FILES; do
          echo "In Loop befor if"
          # Check if the file matches the script patterns
          if [[ $FILE =~ /([^/]+)[-.] ]]; then
            NAME="${BASH_REMATCH[1]}"
          else
            echo "no Match on $FILE"
            continue
          fi
          echo "After if in loop"
          # Locate the corresponding JSON file
          JSON_FILE="json/${NAME}.json" # Adjust the path as necessary

          if [[ -f "$JSON_FILE" ]]; then
            echo "Updating date_created in $JSON_FILE"

            # Use jq to update the date_created field
            jq --arg date "$(date +%Y-%m-%d)" '.date_created = $date' "$JSON_FILE" > tmp.json && mv tmp.json "$JSON_FILE"
          else
            echo "JSON file $JSON_FILE not found"
          fi
        done
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Update Date in .json"
        git push origin HEAD:$BASE_BRANCH

